#!/bin/sh
#
# wp

# wp is sym link
WP="${XDG_DATA_HOME:-${HOME}/.local/share}/wp"
# 16 colors generated by pywal
COLORS="${XDG_CACHE_HOME:-${HOME}/.cache}/wal/colors.sh"
# term fg
DEFAULTFG=259
# xresources handles suckless vars
XRESOURCES="${XDG_CONFIG_HOME:-${HOME}/.config}/x/xresources"
TMP='/tmp/xsettingsd'

# get random valid file in dir
get_rand_file() {
    # get all files in dir
    files="$(for file in "${1}"/*; do
                [ -d "${file}" ] && continue
                printf '%s\n' "${file}"
            done)"

    # loop until valid file found
    file=''
    while ! check_file "${file}"; do
        # get random file and remove it from list
        file="$(printf '%s' "${files}" | shuf -n 1)"
        files="$(printf '%s' "${files}" | grep -vw "${file}")"

        # exit if no more files to check
        [ -z "${files}" ] && break
    done

    # no files in dir are valid
    if ! check_file "${file}"; then file=''; fi

    [ -z "${file}" ] && return 1 || break
}

check_file () {
    # get file extension
    file="${1}"
    ext="${file##*.}"

    case "${ext}" in
        # formats supported by imlib2 used by feh, sxiv, etc.
        bmp  \
      | dib  \
      | ff   \
      | gif  \
      | ico  \
      | iff  \
      | jfi  \
      | jfif \
      | jif  \
      | jpe  \
      | jpeg \
      | jpg  \
      | lbm  \
      | png  \
      | pnm  \
      | tga  \
      | tif  \
      | tiff \
      | webp \
      | xpm) break    ;;
        *)   return 1 ;;
    esac
}

wp () {
    # create wp sym link
    ln -sf "${file}" "${WP}"

    # change bg
    feh --no-fehbg --bg-scale "${WP}"

    # theme iff pywal installed
    command -v wal >/dev/null && theme
}

theme() {
    # remove cached themes and gen new one
    wal -c && wal -ni "${WP}"

    # gtk
    wpg -a "${file}" && wpg -ns "${file}"

    # use main color for gtk
    sed -i "s/\@define-color selected_bg_color.*/\@define-color selected_bg_color @color2;/g" "${XDG_DATA_HOME:-${HOME}/.local/share}/themes/FlatColor/gtk-3.20/gtk.css"

    # xsettingsd to live reload gtk with correct color
    printf "Net/ThemeName \"FlatColor\"" > "${TMP}"
    xsettingsd -c "${TMP}" &

    [ -f "${COLORS}" ] && . "${COLORS}"

    set -- ${color0} ${color1} ${color2} ${color3} ${color4} ${color5} ${color6} ${color7} \
           ${color8} ${color9} ${color10} ${color11} ${color12} ${color13} ${color14} ${color15}

    # replace colors in xresources
    i=0
    for color in "${@}"; do
        color="$(printf '%s' "${color}" | tr '[:upper:]' '[:lower:]')"
        sed -i "s/#define col${i} .*/#define col${i} ${color}/" "${XRESOURCES}"
        i=$((i+1))
        [ ${i} -eq 16 ] && break
    done

    # reload xresources
    xrdb "${XRESOURCES}"

    # reload all instances of st
    kill -s USR1 $(pidof st)

    # hacky work-around to change terminal fg on the fly
    # buggy with alpha
    for tty in $(ls /dev/pts/ | egrep -i '[1-9][0-9]*'); do
        printf "\033]4;${DEFAULTFG};${color0}\007" > "/dev/pts/${tty}" 2>/dev/null
    done

    # reload dwm
    dwmc reload

    # zathura
    zathura-pywal

    # rm xsettingsd tmp later b/c it complains otherwise
    rm -f "${TMP}"
}

main() {
    # convert relative to abs if not already
    case "${1}" in
        /*) path="${1}"        ;;
        *)  path="${PWD}/${1}" ;;
    esac

    # if dir get rand file
    if [ -d "${path}" ]; then
        get_rand_file "${path}"
    # if file check it
    elif [ -f "${path}" ]; then
        check_file "${path}"
    fi

    # change wp if file exists and is ok
    { [ ${?} -eq 0 ] && [ -n "${file}" ] && wp "${file}" ; } || return 1
}

main "${@}"
